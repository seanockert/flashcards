:root {
  --size-half: 0.375rem;
  --size-base: 0.75rem;
  --size-2x: 1.5rem;
  --size-3x: 2.25rem;
  --size-4x: 3rem;
  --color-background: hsl(38, 44%, 96%);
  --color-background-darker: hsl(38, 44%, 85%);
  --color-background-light: hsl(38, 44%, 98%);
  --color-background-lightest: hsl(38, 44%, 100%);
  --color-background-positive: hsl(126, 44%, 90%);
  --color-background-negative: hsl(10, 44%, 90%);
  --color-background-neutral: hsl(38, 44%, 90%);
  --color-yellow: hsl(38, 95%, 66%);
  --color-text: hsl(38, 0, 14%);
  --color-shadow: hsla(38, 30%, 70%, 0.3);
  --shadow-elevation-medium: 0.3px 0.5px 0.7px var(--color-shadow), 0.8px 1.6px 2px -0.8px var(--color-shadow),
    2.1px 4.1px 5.2px -1.7px var(--color-shadow), 5px 10px 12.6px -2.5px var(--color-shadow);
}

*,
*:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: var(--color-background);
  background-image: radial-gradient(var(--color-background-darker) 5%, transparent 0);
  background-size: 2.4rem 2.4rem;
  color: var(--color-text);
  font-family: sans-serif;
  height: 100vh;
}

[hidden],
[v-cloak] {
  display: none !important;
}

button {
  -webkit-tap-highlight-color: transparent;
  background: none;
  border: none;
  cursor: pointer;
  font: inherit;
  line-height: 1;
  padding: var(--size-base);
}

ul {
  list-style: none;
}

input {
  font: inherit;
  padding: var(--size-base);
  width: 100%;
}

.container {
  display: flex;
  flex-direction: column;
  gap: var(--size-base);
  margin: 0 auto;
  max-width: calc(100vh * 63 / 88);
  width: 100vw;
}

.cards {
  display: flex;
  gap: var(--size-4x);
  margin: 0 auto;
  max-width: inherit;
  overflow: auto;
  perspective: 30rem;
  scroll-snap-type: x mandatory;
  width: inherit;
  mask-image: linear-gradient(to right, transparent, white 2%, white 98%, transparent 100%);
}

.cards::-webkit-scrollbar {
  display: none;
}

.cards > li {
  max-width: inherit;
  padding: var(--size-base) var(--size-base);
  scroll-snap-align: center;
  width: inherit;
}

.card {
  aspect-ratio: 63 / 88;
  max-height: calc(100vh - 8rem);
  max-width: 100%;
  opacity: 1;
  perspective: 30rem;
  position: relative;
  width: inherit;
}

.card > .inner {
  border-radius: var(--size-base);
  box-shadow: var(--shadow-elevation-medium);
  transform-style: preserve-3d;
  transition: transform 0.5s ease-in-out;
  height: 100%;
}

.card.flipped > .inner {
  transform: rotateY(180deg);
}

.card > div > div {
  align-items: center;
  backface-visibility: hidden;
  background-color: var(--color-background-light);
  border-radius: inherit;
  border: var(--size-half) solid var(--color-background-lightest);
  display: flex;
  flex-direction: column;
  font-size: 12cqh;
  font-weight: 800;
  gap: var(--size-half);
  height: 100%;
  justify-content: center;
  overflow: hidden;
  position: absolute;
  text-align: center;
  text-wrap: balance;
  width: 100%;
}

.front {
  letter-spacing: 0.03rem;
  line-height: 1.3;
  text-transform: uppercase;
}

.back {
  transform: rotateY(180deg);
}

@keyframes fancy-in {
  0% {
    transform: scale(0.8) perspective(30rem) rotate(6deg) rotateY(20deg);
  }
  50% {
    opacity: 1;
    transform: rotate(0deg);
  }
  90% {
    opacity: 1;
    transform: translate3d(90%, 0%, 0%) scale(0.8) perspective(30rem) rotate(-6deg) rotateY(-20deg);
  }
  100% {
    opacity: 0;
    transform: translate3d(100%, 10%, 0) scale(0.8) rotate(-3deg) rotateY(0);
  }
}

@media (prefers-reduced-motion: no-preference) {
  @supports (animation-timeline: view(x)) {
    .card {
      animation: fancy-in ease-in-out both;
      animation-timeline: view(x);
    }
  }
}

.controls {
  display: flex;
  gap: var(--size-base);
  padding: 0 var(--size-base);
  justify-content: space-between;
}

.controls > :first-child {
  display: flex;
  gap: var(--size-base);
}

.squircle {
  align-items: center;
  aspect-ratio: 1;
  display: grid;
  font-weight: bold;
  justify-content: center;
  padding: 0;
  text-align: center;
  transition: all 0.15s ease-out;
  width: 4rem;
}

.squircle > * {
  grid-area: 1 / 1;
}

.squircle > svg {
  fill: var(--bg);
  width: inherit;
}

.icon {
  fill: none;
  height: var(--size-3x);
  stroke-linecap: round;
  stroke-width: 2;
  stroke: currentColor;
  width: var(--size-3x);
}

button.squircle:hover,
button.squircle:focus {
  scale: 1.05;
}

button.squircle:active {
  scale: 0.95;
}

.positive {
  --bg: var(--color-background-positive);
}

.negative {
  --bg: var(--color-background-negative);
}

.neutral {
  --bg: var(--color-background-neutral);
}
